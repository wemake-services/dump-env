[build-system]
build-backend = "poetry.core.masonry.api"
requires = [ "poetry-core>=2.0" ]


[tool.poetry]
name = "dump-env"
version = "1.6.0"
description = "A utility tool to create .env files"

license = "MIT"

authors = [
  "Nikita Sobolev <mail@sobolevn.me>"
]

readme = "README.md"

repository = "https://github.com/wemake-services/dump-env"
homepage = "https://dump-env.readthedocs.io"

keywords = [
  "dotenv",
  ".env",
  "templates",
  "secrets",
  "CI/CD"
]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]

[tool.poetry.scripts]
dump-env = "dump_env.cli:main"

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1"
pytest-cov = "^6.0"
pytest-randomly = "^3.12"
syrupy = "^4.9"

wemake-python-styleguide = "^1.1"
ruff = "^0.11"

mypy = "^1.15"

python-dotenv = "^1.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^8.1"
tomli = "^2.0"
furo = "^2024.8"
myst-parser = "^4.0"


[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
preview = true
fix = true
target-version = "py310"
line-length = 80

[tool.ruff.format]
quote-style = "single"
docstring-code-format = false

[tool.ruff.lint]
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
ignore = [
  "A005",   # allow to shadow stdlib and builtin module names
  "COM812", # trailing comma, conflicts with `ruff format`
  # Different doc rules that we don't really care about:
  "D100",
  "D104",
  "D106",
  "D203",
  "D212",
  "D401",
  "D404",
  "D405",
  "ISC001",  # implicit string concat conflicts with `ruff format`
  "ISC003",  # prefer explicit string concat over implicit concat
  "PLR09",   # we have our own complexity rules
  "PLR2004", # do not report magic numbers
  "PLR6301", # do not require classmethod / staticmethod when self not used
  "TRY003",  # long exception messages from `tryceratops`
]
external = [ "WPS" ]

# Plugin configs:
flake8-quotes.inline-quotes = "single"
mccabe.max-complexity = 6
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
  "S101", # asserts
  "S404", # subprocess
  "S603", # subprocess
  "S607", # subprocess partial path
]
